name: "SCP through SSH"
# fixme: finish scp action here
inputs:
    direction:
        description: "download/upload"
        required: true
        default: "download"
    host:
        required: true
    port:
        required: true
        default: 22
    user:
        required: true
    local_file:
        required: true
    server_file:
        required: true
    ssh_key_text:
        description: "SSH private key text"
        required: true
runs:
    using: "composite"
    steps:
        # - name: "Upload backup script file to server"
        #   uses: appleboy/scp-action@v0.1.7
        #   with:
        #       host: ${{ env.SERVER_HOST }}
        #       username: ${{ env.SERVER_USER }}
        #       key: ${{ secrets.SERVER_PRIVATE_KEY }}
        #       port: ${{ env.SERVER_SSH_PORT }}
        #       source: ${{ env.CICD_SCRIPTS_PATH }}/server-backup.sh
        #       target: ${{ env.SERVER_CICD_SCRIPT_FOLDER }}
        #       strip_components: 4

        - name: "Download backup file"
          run: |
              function create_private_keyfile_from_content() {
                content="$1"
                key_file_path="$2"
                mkdir -p $(dirname $key_file_path)
                touch $key_file_path && chmod 600 $key_file_path
                >$key_file_path
                echo "$content" >>$key_file_path
                echo $key_file_path
              }          

              keyfile_path=${{ github.workspace }}/$(date +%s)_key

              create_private_keyfile_from_content "${{inputs.ssh_key_text}}" "$keyfile_path"

              if [[ ${{ inputs.direction }} == "download" ]]; then
                scp -o StrictHostKeyChecking=no -P ${{ inputs.port }} -i $keyfile_path ${{ inputs.user }}@${{ inputs.host }}:${{ inputs.server_file }} ${{ inputs.local_file }}
              else
                scp -o StrictHostKeyChecking=no -P ${{ inputs.port }} -i $keyfile_path ${{ inputs.local_file }} ${{ inputs.user }}@${{ inputs.host }}:${{ inputs.server_file }}
              fi

          #   scp -o StrictHostKeyChecking=no -P ${{ inputs.port }} -i $keyfile_path ${{ inputs.user }}@${{ inputs.host }}:${{ env.SERVER_LATEST_BACKUP_FILE_PATH }} ${{ env.LOCAL_BACKUP_FILE_PATH }}
